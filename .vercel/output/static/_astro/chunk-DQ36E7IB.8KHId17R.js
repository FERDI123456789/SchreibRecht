var y=e=>typeof atob<"u"&&typeof atob=="function"?atob(e):typeof global<"u"&&global.Buffer?new global.Buffer(e,"base64").toString():e,k=[".lcl.dev",".stg.dev",".lclstage.dev",".stgstage.dev",".dev.lclclerk.com",".stg.lclclerk.com",".accounts.lclclerk.com","accountsstage.dev","accounts.dev"],p="pk_live_",E="pk_test_";function d(e,r={}){if(e=e||"",!e||!h(e)){if(r.fatal&&!e)throw new Error("Publishable key is missing. Ensure that your publishable key is correctly configured. Double-check your environment configuration for your keys, or access them here: https://dashboard.clerk.com/last-active?path=api-keys");if(r.fatal&&!h(e))throw new Error("Publishable key not valid.");return null}const t=e.startsWith(p)?"production":"development";let a=y(e.split("_")[2]);return a=a.slice(0,-1),r.proxyUrl?a=r.proxyUrl:t!=="development"&&r.domain&&(a=`clerk.${r.domain}`),{instanceType:t,frontendApi:a}}function h(e=""){try{const r=e.startsWith(p)||e.startsWith(E),t=y(e.split("_")[2]||"").endsWith("$");return r&&t}catch{return!1}}function w(){const e=new Map;return{isDevOrStagingUrl:r=>{if(!r)return!1;const t=typeof r=="string"?r:r.hostname;let a=e.get(t);return a===void 0&&(a=k.some(i=>t.endsWith(i)),e.set(t,a)),a}}}function P(e){if(!e)return"";let r;if(e.match(/^(clerk\.)+\w*$/))r=/(clerk\.)*(?=clerk\.)/;else{if(e.match(/\.clerk.accounts/))return e;r=/^(clerk\.)*/gi}return`clerk.${e.replace(r,"")}`}var M=(e,r="5.57.1")=>{if(e)return e;const t=S(r);return t?t==="snapshot"?"5.57.1":t:_(r)},S=e=>e.trim().replace(/^v/,"").match(/-(.+?)(\.|$)/)?.[1],_=e=>e.trim().replace(/^v/,"").split(".")[0];function x(e){return e?U(e)||b(e):!0}function U(e){return/^http(s)?:\/\//.test(e||"")}function b(e){return e.startsWith("/")}function R(e){return e?b(e)?new URL(e,window.location.origin).toString():e:""}var K={initialDelay:125,maxDelayBetweenRetries:0,factor:2,shouldRetry:(e,r)=>r<5,retryImmediately:!0,jitter:!0},A=100,g=async e=>new Promise(r=>setTimeout(r,e)),v=(e,r)=>r?e*(1+Math.random()):e,L=e=>{let r=0;const t=()=>{const a=e.initialDelay,i=e.factor;let s=a*Math.pow(i,r);return s=v(s,e.jitter),Math.min(e.maxDelayBetweenRetries||s,s)};return async()=>{await g(t()),r++}},C=async(e,r={})=>{let t=0;const{shouldRetry:a,initialDelay:i,maxDelayBetweenRetries:s,factor:c,retryImmediately:l,jitter:u}={...K,...r},o=L({initialDelay:i,maxDelayBetweenRetries:s,factor:c,jitter:u});for(;;)try{return await e()}catch(n){if(t++,!a(n,t))throw n;l&&t===1?await g(v(A,u)):await o()}},D="loadScript cannot be called when document does not exist",I="loadScript cannot be called without a src";async function O(e="",r){const{async:t,defer:a,beforeLoad:i,crossOrigin:s,nonce:c}=r||{};return C(()=>new Promise((u,o)=>{e||o(new Error(I)),(!document||!document.body)&&o(D);const n=document.createElement("script");s&&n.setAttribute("crossorigin",s),n.async=t||!1,n.defer=a||!1,n.addEventListener("load",()=>{n.remove(),u(n)}),n.addEventListener("error",()=>{n.remove(),o()}),n.src=e,n.nonce=c,i?.(n),document.body.appendChild(n)}),{shouldRetry:(u,o)=>o<=5})}var T=Object.freeze({InvalidProxyUrlErrorMessage:"The proxyUrl passed to Clerk is invalid. The expected value for proxyUrl is an absolute URL or a relative path with a leading '/'. (key={{url}})",InvalidPublishableKeyErrorMessage:"The publishableKey passed to Clerk is invalid. You can get your Publishable key at https://dashboard.clerk.com/last-active?path=api-keys. (key={{key}})",MissingPublishableKeyErrorMessage:"Missing publishableKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.",MissingSecretKeyErrorMessage:"Missing secretKey. You can get your key at https://dashboard.clerk.com/last-active?path=api-keys.",MissingClerkProvider:"{{source}} can only be used within the <ClerkProvider /> component. Learn more: https://clerk.com/docs/components/clerk-provider"});function $({packageName:e,customMessages:r}){let t=e;const a={...T,...r};function i(s,c){if(!c)return`${t}: ${s}`;let l=s;const u=s.matchAll(/{{([a-zA-Z0-9-_]+)}}/g);for(const o of u){const n=(c[o[1]]||"").toString();l=l.replace(`{{${o[1]}}}`,n)}return`${t}: ${l}`}return{setPackageName({packageName:s}){return typeof s=="string"&&(t=s),this},setMessages({customMessages:s}){return Object.assign(a,s||{}),this},throwInvalidPublishableKeyError(s){throw new Error(i(a.InvalidPublishableKeyErrorMessage,s))},throwInvalidProxyUrl(s){throw new Error(i(a.InvalidProxyUrlErrorMessage,s))},throwMissingPublishableKeyError(){throw new Error(i(a.MissingPublishableKeyErrorMessage))},throwMissingSecretKeyError(){throw new Error(i(a.MissingSecretKeyErrorMessage))},throwMissingClerkProviderError(s){throw new Error(i(a.MissingClerkProvider,s))},throw(s){throw new Error(i(s))}}}var f="Clerk: Failed to load Clerk",{isDevOrStagingUrl:B}=w(),m=$({packageName:"@clerk/shared"});function N(e){m.setPackageName({packageName:e})}var Y=async e=>{const r=document.querySelector("script[data-clerk-js-script]");if(r)return new Promise((t,a)=>{r.addEventListener("load",()=>{t(r)}),r.addEventListener("error",()=>{a(f)})});if(!e?.publishableKey){m.throwMissingPublishableKeyError();return}return O(j(e),{async:!0,crossOrigin:"anonymous",nonce:e.nonce,beforeLoad:J(e)}).catch(()=>{throw new Error(f)})},j=e=>{const{clerkJSUrl:r,clerkJSVariant:t,clerkJSVersion:a,proxyUrl:i,domain:s,publishableKey:c}=e;if(r)return r;let l="";i&&x(i)?l=R(i).replace(/http(s)?:\/\//,""):s&&!B(d(c)?.frontendApi||"")?l=P(s):l=d(c)?.frontendApi||"";const u=t?`${t.replace(/\.+$/,"")}.`:"",o=M(a);return`https://${l}/npm/@clerk/clerk-js@${o}/dist/clerk.${u}browser.js`},F=e=>{const r={};return e.publishableKey&&(r["data-clerk-publishable-key"]=e.publishableKey),e.proxyUrl&&(r["data-clerk-proxy-url"]=e.proxyUrl),e.domain&&(r["data-clerk-domain"]=e.domain),e.nonce&&(r.nonce=e.nonce),r},J=e=>r=>{const t=F(e);for(const a in t)r.setAttribute(a,t[a])};export{$ as b,h as i,Y as l,N as s};
